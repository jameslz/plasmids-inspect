#!/usr/bin/perl -w

use strict;
use warnings;
use File::Basename;
use Cwd 'abs_path';

die "Usage:perl $0 <metadata>" if(@ARGV != 1);

my ( $config )      = @ARGV;

my  %metadata       = ();
profiling();

my  $project_home   =  qq{$metadata{project_home}/$metadata{project_id}/annotation/prodigal};


my  $prediction     =  qq{$project_home/prediction};
my  $orfs           =  qq{$project_home/orfs};
my  $runs           =  qq{$project_home/runs};
my  $report         =  qq{$project_home/report};

my  $datasets       =  qq{$metadata{project_home}/$metadata{project_id}/assembly/contigs};
my  @samples_t      = ();

my  $utils          =  dirname( abs_path($0) ) . '/../../utils';
my  $binaries       =  dirname( abs_path($0) ) . '/../../binaries';
my  $pipe           =  dirname( abs_path($0) ) . '/../../thirdpart/prodigal-kit-0.0.3/prodigal-kit';

my  $dry_run        =  0;
    $dry_run        =  1 if(exists $metadata{dry_run} && $metadata{dry_run} eq 'T');

submit();

exit;

sub profiling {

    open( PROFILE,  $config )  || die "[ERR]: can't open $config $!\n";
    while(<PROFILE>){
         
        $_ =~ s/\s+$//;
        next if(/^#/ || !/^\S+/);
        my ($key, $value)  = $_ =~ /^(\S+)\s+(.+)/;
        next if($value eq '-');
        $metadata{$key}  = $value;
    
    } 
    close PROFILE;

}

sub mapping_file {

    open (PROFILE, qq{$metadata{mapping_file}})  || die "[ERR]: can't open $metadata{mapping_file} $!\n";
    while (<PROFILE>) {
    
        $_ =~ s/\s+$//;
        next if (/^#/);
        my @its = split /\s+/,$_;
        push @samples_t , $its[0];

    }
    close PROFILE;

}

sub submit {
  
    mapping_file();
    make_fs();
    prodigal_run();
    report_run();
    auxiliary_run();

}

sub make_fs {
   
    my $cmd = qq{mkdir -p $runs
                          $orfs
                          $report};
       $cmd =~ s/\n\s+/ /msg;
    system $cmd;

}

sub prodigal_run {

    my $sh    =  qq{$runs/prodigal.sh};
    open (EXPORT, ">$sh") || die "[ERR]: can't open $sh $!\n";

    foreach my $sample ( @samples_t ) {
        print EXPORT  prodigal( $sample );
    }

    close EXPORT;
    system qq{cat $sh | $binaries/gargs -v --nlines 1 -p  1 "{}"\n} if(!$dry_run);

}

sub prodigal {
    
    my  $sample = shift;
    my  $para   = (exists $metadata{prodigal_batch} ) ?  $metadata{prodigal_batch} : '1000';
    
    my  $cmd    = qq{$pipe                           \
                        -n $para                     \
                        -t $metadata{cpus}           \
                        $datasets/$sample.fasta      \
                        $prediction/$sample;\n};
        $cmd    =~ s/\s+\n\s+/ /msg;
    return $cmd;

}

sub report_run {

    my $sh    =  qq{$runs/report.sh};   
    open (EXPORT, ">$sh") || die "[ERR]: can't open $sh $!\n";

    foreach my $sample ( @samples_t ) {
        foreach my $t (qw/gff gtf bed pep fna/) {
            print EXPORT qq{mv $prediction/$sample/report/prodigal.$t $orfs/$sample.$t ;\n}; 
        }
    }

    close EXPORT;
    system qq{bash $sh};

}

sub auxiliary_run {

    my $sh =  qq{$runs/auxiliary.sh}; 
    open (EXPORT, ">$sh") || die "[ERR]: can't open $sh $!\n";

    print EXPORT  orf_stats();
    print EXPORT  tsv2xlsx();
    print EXPORT  qq{rm -rf $prediction ;\n};

    close EXPORT;
    system qq{bash $sh};

}

sub orf_stats {

    my $cmd = qq{$utils/orf_stats                     \
                    $metadata{mapping_file}           \
                    $orfs                             \
                >$report/samples.stats.txt ;\n};
       $cmd =~ s/\s+\n\s+/ /msg;
    return $cmd;

}

sub tsv2xlsx {

    my $cmd = qq{$binaries/tsv-utils tsv2xlsx          \
                    $report/samples.stats.xlsx         \
                    orf.stats:$report/samples.stats.txt ;\n};
       $cmd =~ s/\s+\n\s+/ /msg;
    return $cmd;

}