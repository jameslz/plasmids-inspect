#!/usr/bin/perl -w

use strict;
use warnings;
use File::Basename;
use Cwd 'abs_path';

die "Usage:perl $0 <metadata>" if(@ARGV != 1);

my ( $config )      =  @ARGV;

my %metadata        =  ();
profiling();

my  $project_home   =  qq{$metadata{project_home}/$metadata{project_id}/annotation/coverage};

my  $quant          =  qq{$project_home/quant};
my  $libs           =  qq{$project_home/libs};
my  $runs           =  qq{$project_home/runs};
my  $report         =  qq{$project_home/report};

my  $contigs        =  qq{$metadata{project_home}/$metadata{project_id}/assembly/contigs};

my  $trimming       =  (-e qq{$metadata{project_home}/$metadata{project_id}/bmtagger} ) ? 'bmtagger' : 'trimming';
my  $reads          =  qq{$metadata{project_home}/$metadata{project_id}/$trimming/reads};

my  @samples_t      =  ();
my  $utils          =  dirname( abs_path($0) ) . '/../../utils';
my  $binaries       =  dirname( abs_path($0) ) . '/../../binaries';

my  $dry_run        =  0;
    $dry_run        =  1 if(exists $metadata{dry_run} && $metadata{dry_run} eq 'T');

submit();

exit;

sub submit {
    
  mapping_file();
  make_fs();
  kallisto_run();

}

sub profiling {

    open( PROFILE,  $config )   || die "[ERR]: can't open $config. \n";
    while(<PROFILE>){
          
        $_ =~ s/\s+$//;
        next if(/^#/ || !/^\S+/);
        my ($key, $value)  = $_ =~ /^(\S+)\s+(.+)/;
        next if($value eq '-');
        $metadata{$key}  = $value;

    } 
    close PROFILE;

}

sub mapping_file {

    open (PROFILE, qq{$metadata{mapping_file}})   || die "[ERR]: can't open $metadata{mapping_file}. \n";
    while (<PROFILE>) {
 
        $_ =~ s/\s+$//;
        next if (/^#/);
        my @its = split /\t/,$_;
        push @samples_t, $its[0];    

    }
    close PROFILE;
    
}

sub make_fs {
    
    my $cmd = qq{mkdir -p $report
                          $runs
                          $libs
                          $quant};
       $cmd =~ s/\n\s+/ /msg;
    system $cmd;

}

sub kallisto_run {

    my $sh    =  qq{$runs/kallisto.sh};
    open (EXPORT, qq{>$sh}) || die "[ERR]: can't open $sh $!\n";

    foreach my $sample ( @samples_t ) {
        print EXPORT  makedb( $sample );
        print EXPORT  kallisto( $sample );
        print EXPORT  fmt( $sample );
        print EXPORT  abundance( $sample );
        print EXPORT  qq{rm -rf $libs/$sample ;\n};
    }

    close EXPORT;
    system qq{cat $sh | $binaries/gargs -v  -nlines 1  -p  1 "{}"} if(!$dry_run);

}

sub makedb {

    my $sample  = shift;
    my $cmd     = qq{kallisto index                    \
                        -i $libs/$sample               \
                        $contigs/$sample.fasta ;\n};
       $cmd     =~ s/\s+\n\s+/ /msg; 
    
    return $cmd;

}

sub kallisto {
     
    my $sample  = shift;
    my $cmd     = qq{kallisto quant                    \
                        -i $libs/$sample               \
                        -o $quant/$sample              \
                        -b 100                         \
                        --plaintext                    \
                        -t $metadata{cpus}             \
                        $reads/$sample.R1.fastq        \
                        $reads/$sample.R2.fastq ;\n};
       $cmd     =~ s/\s+\n\s+/ /msg; 
    return $cmd;

}

sub fmt {

    my $sample  = shift;
    my $cmd     = qq{tail -n +2                        \
                       $quant/$sample/abundance.tsv    \
                    | $binaries/tabtk cut              \
                        -r -f1,2,4,5 -                 \
                    | $binaries/tsv-utils add_headline \
                       '#id\tlength\tcounts\ttpm'      \
                        -                              \
                    >$report/$sample.txt ;\n};
        $cmd    =~ s/\s+\n\s+/ /msg; 
    return $cmd;

}

sub abundance {

    my $sample  = shift;
    my $cmd     = qq{$binaries/tabtk cut               \
                        -r -f1,4                       \
                        $report/$sample.txt            \
                    >$report/$sample.abundance.annotation.txt ;\n};
        $cmd    =~ s/\s+\n\s+/ /msg; 
    return $cmd;

}